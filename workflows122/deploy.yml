on:
  workflow_call:
    inputs:
      application_name:
        description: 'The name of the application'
        type: string
      application_version:
        description: 'The version of the application'
        type: string
      environment:
        description: 'The environment to deploy to'
        type: string
      registry_name:
        description: 'The name of the Azure container registry'
        type: string
    secrets:
      AZURE_AD_TENANT_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  job:
    name: Build Image and deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Show account info (for debugging)
        run: az account show

      - name: ACR Login
        run: az acr login -n ${{ inputs.registry_name }}

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          build-args: |
            ARG_ROOT_PASSWORD=${{ secrets.DOCKER_PASSWORD }}
            ARG_LOG_STDOUT=/dev/stdout
            ARG_LOG_STDERR=/dev/stderr
          context: .
          file: Dockerfile
          push: true
          tags: "${{ inputs.registry_name }}.azurecr.io/${{ inputs.application_name }}:${{ inputs.application_version }}"

      - name: 'Deploy to Azure Web App for Container'
        uses: azure/webapps-deploy@v2
        with:
          app-name: app-${{ inputs.application_name }}
          images: "${{ inputs.registry_name }}.azurecr.io/${{ inputs.application_name }}:${{ inputs.application_version }}"
